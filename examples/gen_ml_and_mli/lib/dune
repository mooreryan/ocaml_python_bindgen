(library
 (name gen_ml_and_mli_lib)
 (libraries pyml base))

(rule
 (targets thing.ml thing.mli)
 (mode
  (promote (until-clean)))
 (deps (source_tree specs) (source_tree py))
 (action
  (progn
   (run
     %{bin:pyml_bindgen}
     specs/thing.txt
     thing
     Thing
     --caml-module
     Thing
     --split-caml-module
     .
     --of-pyo-ret-type
     or_error
     --embed-python-source
     py/thing.py)
   (run ocamlformat thing.ml --inplace)
   (run ocamlformat thing.mli --inplace))))

(rule
 (targets orange.ml orange.mli)
 (mode
  (promote (until-clean)))
 (deps (source_tree specs) (source_tree py))
 (action
  (progn
   (run
     %{bin:pyml_bindgen}
     specs/orange.txt
     orange
     Orange
     --caml-module
     Orange
     --split-caml-module
     .
     --of-pyo-ret-type
     or_error
     --embed-python-source
     py/orange.py)
   (run ocamlformat orange.ml --inplace)
   (run ocamlformat orange.mli --inplace))))
